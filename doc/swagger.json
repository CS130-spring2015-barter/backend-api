{
    "swagger": "2.0",
    "info": {
        "version": "0.0.0",
        "title": "Barter API"
    },
    "paths": {
        "/item/geo": {
            "get": {
                "description": "Fetches geographically sorted items that a given user hasn't seen.",
                "tags": [
                    "item"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/item": {
            "post": {
                "description": "Creates a new item posting. Expects POST body to have fields 'user_id', 'item_description', 'item_title', and 'item_picture'.",
                "tags": [
                    "item"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/item/{itemId}": {
            "put": {
                "description": "Updates an existing item posting",
                "parameters": [
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "ID of item to update",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "item"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "description": "Removes a user's previously posted item",
                "parameters": [
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "ID of item to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "item"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/item/liked": {
            "post": {
                "description": "Adds items to that have been \"liked\" by a user. API expects an array named 'itemIds' and single value 'userId' to be in the post body.",
                "tags": [
                    "item"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/user": {
            "post": {
                "description": "Registers a new user. Expects the HTTP Post request to have fields: 'first', 'last', 'email', 'hashed_password', 'lat', and 'long'.",
                "tags": [
                    "user"
                ],
                "responses": {
                    "200": {
                        "description": "User registered"
                    },
					"500": {
						"description": "User failed to be registered"
					}
                }
            }
        },
        "/user/{userId}": {
            "get": {
                "description": "Gets information for a user based off of a passed userId in the URL.",
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "description": "ID of user to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "put": {
                "description": "Edits a user's information",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "description": "ID of user to edit",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "user"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "description": "Removes a user",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "description": "ID of user to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "user"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "Creates a new user session. Returns user ID if successful, otherwise sends a 403 status. Expects 'email', 'hashed_password', 'lat', and 'long' in post body.",
                "tags": [
                    "user"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
					"403": {
						"description": "Login failed."
					}
                }
            }
        },
        "/user/logout": {
            "post": {
                "description": "Terminates the current user session",
                "tags": [
                    "user"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/chat": {
            "post": {
                "description": "Create new chat session",
                "tags": [
                    "chat"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/chat/{sessionId}": {
            "delete": {
                "description": "Remove chat session",
                "parameters": [
                    {
                        "in": "path",
                        "name": "sessionId",
                        "description": "ID of user to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "chat"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    }
}
